apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kiali
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://kiali.org/helm-charts
    targetRevision: 1.70.0
    chart: kiali-operator
    helm:
      parameters:
      - name: cr.create
        value: 'true'
      - name: cr.namespace
        value: istio-system
      - name: cr.spec.api.namespaces.exclude[0]
        value: istio-operator
      - name: cr.spec.api.namespaces.exclude[1]
        value: kube-.*
      - name: cr.spec.api.namespaces.exclude[2]
        value: openshift.*
      - name: cr.spec.api.namespaces.exclude[3]
        value: ibm.*
      - name: cr.spec.api.namespaces.exclude[4]
        value: kiali-operator
      - name: cr.spec.deployment.ingress_enabled
        value: 'false'
      - name: cr.spec.deployment.namespace
        value: monitoring
      - name: cr.spec.deployment.pod_annotations.sidecar\.istio\.io\/inject
        value: \'false\'
      - name: cr.spec.istio_namespace
        value: istio-system
      # - name: cr.spec.deployment.override_ingress_yaml.spec.tls[0].hosts[0]
      #   value: <<__subdomain_kiali__>>.<<__domain__>>
      # - name: cr.spec.deployment.override_ingress_yaml.spec.tls[0].secretName
      #   value: monitoring-ingressgateway-certs
      # - name: cr.spec.deployment.override_ingress_yaml.spec.rules[0].host
      #   value: <<__subdomain_kiali__>>.<<__domain__>>
      # - name: cr.spec.deployment.override_ingress_yaml.spec.ingressClassName
      #   value: istio
      # - name: cr.spec.deployment.override_ingress_yaml.spec.rules[0].http.paths[0].path
      #   value: '/'
      # - name: cr.spec.deployment.override_ingress_yaml.spec.rules[0].http.paths[0].pathType
      #   value: Prefix
      # - name: cr.spec.deployment.override_ingress_yaml.spec.rules[0].http.paths[0].backend.serviceName
      #   value: kiali
      # - name: cr.spec.deployment.override_ingress_yaml.spec.rules[0].http.paths[0].backend.servicePort
      #   value: '20001'
      - name: cr.spec.external_services.prometheus.url
        value: http://kube-prometheus-stack-prometheus.monitoring:9090
      - name: cr.spec.external_services.tracing.use_grpc
        value: "false" # we would actually want this to be true, but it doesn't work currently
      - name: cr.spec.external_services.tracing.in_cluster_url
        value: http://jaeger-query.istio-system
      - name: cr.spec.external_services.grafana.auth.type
        value: basic
      - name: cr.spec.external_services.grafana.auth.password
        value: secret:kube-prometheus-stack-grafana:admin-password
      - name: cr.spec.external_services.grafana.auth.username
        value: admin
      - name: cr.spec.external_services.grafana.url
        value: https://<<__subdomain_grafana__>>.<<__domain__>>/grafana
      - name: cr.spec.external_services.grafana.in_cluster_url
        value: http://kube-prometheus-stack-grafana.monitoring:80/grafana
      - name: cr.spec.external_services.grafana.dashboards[0].name
        value: Istio Service Dashboard
      - name: cr.spec.external_services.grafana.dashboards[0].variables.namespace
        value: var-namespace
      - name: cr.spec.external_services.grafana.dashboards[0].variables.service
        value: var-service
      - name: cr.spec.external_services.grafana.dashboards[1].name
        value: Istio Workload Dashboard
      - name: cr.spec.external_services.grafana.dashboards[1].variables.namespace
        value: var-namespace
      - name: cr.spec.external_services.grafana.dashboards[1].variables.service
        value: var-service
      - name: cr.spec.external_services.grafana.dashboards[2].name
        value: Kubernetes / API server
      - name: cr.spec.external_services.grafana.dashboards[2].variables.var-datasource
        value: default
      - name: cr.spec.external_services.grafana.dashboards[2].variables.var-cluster
        value: ''
      - name: cr.spec.external_services.grafana.dashboards[2].variables.var-instance
        value: All
  destination:
    server: https://kubernetes.default.svc
    namespace: kiali-operator
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
